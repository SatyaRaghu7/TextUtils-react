{"version":3,"sources":["components/Navbar.js","components/Textarea.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","show","window","innerWidth","navmenu","document","getElementById","firstElementChild","children","lastElementChild","classList","toggle","style","display","height","i","length","addEventListener","e","nav","menuline","contains","target","remove","className","mode","id","logo","href","onClick","type","toggleMode","modeText","Textarea","useState","text","setText","heading","value","onChange","event","rows","disabled","toUpperCase","toLowerCase","a","split","newText","trim","replace","slice","navigator","clipboard","writeText","fontSize","filter","footer","Date","getFullYear","color","App","setmode","setmodeText","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.09789c04.chunk.js","sourcesContent":["import React from 'react';\r\n// import {Link} from \"react-router-dom\";\r\nimport '../style/menulines.css';\r\nimport '../style/Mode.css';\r\n\r\nexport default function Navbar(props) {\r\n\r\n    function show(){\r\n        if (window.innerWidth<='700'){\r\n            let navmenu = document.getElementById('nav').firstElementChild.children;\r\n            let menuline = document.getElementById('nav').lastElementChild;\r\n            menuline.classList.toggle('change');\r\n            \r\n            if (navmenu[1].style.display!=='block'){\r\n                document.getElementById(\"nav\").style.height = '200px';\r\n                for (let i = 1; i < navmenu.length; i++) {\r\n                    navmenu[i].style.display = 'block';\r\n                }\r\n            }\r\n            else {\r\n                document.getElementById(\"nav\").style.height = '50px';\r\n                for (let i = 1; i < navmenu.length; i++) {\r\n                navmenu[i].style.display = 'none';\r\n            }\r\n            }\r\n        }\r\n    }\r\n\r\n    document.addEventListener('mouseup', function(e){\r\n        if (window.innerWidth<='700'){\r\n\r\n            let navmenu = document.getElementById('nav').firstElementChild.children;\r\n            let nav = document.getElementById('nav');\r\n            let menuline = document.getElementById('nav').lastElementChild;\r\n            if (!nav.contains(e.target)){\r\n                nav.style.height = '50px';\r\n                menuline.classList.remove('change');\r\n                for (let i = 1; i < navmenu.length; i++) {\r\n                    navmenu[i].style.display = 'none';\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className={`navbar nav-${props.mode}`} id=\"nav\">\r\n            <div>\r\n                <button className=\"brand\">{props.logo}</button>\r\n                <a href=\"/#\" onClick={show}>Home</a>\r\n                {/* <Link to=\"/\" onClick={show}>Home</Link>\r\n                <Link to=\"/about\" onClick={show}>About</Link> */}\r\n                <div className=\"modeToggle\" >\r\n                    <label className=\"switch\" id=\"switch\">\r\n                        <input type=\"checkbox\" onClick={props.toggleMode}/>\r\n                        <div className=\"slider round\"></div>\r\n                        <span className={`modeText modeText-${props.mode}`}>{props.modeText}</span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <div className=\"menulines\" onClick={show}>\r\n                <div className={`first ${props.mode}`}></div>\r\n                <div className={`second ${props.mode}`}></div>\r\n                <div className={`third ${props.mode}`}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport '../style/textarea.css';\r\n\r\nexport default function Textarea(props){\r\n\r\n    const upperCase = ()=>{\r\n        setText(text.toUpperCase());\r\n    }\r\n\r\n    const lowerCase =()=>{\r\n        setText(text.toLowerCase());\r\n    }\r\n\r\n    const sentenceCase =()=>{\r\n        let a = text.split(/[.!?]/g);\r\n        // let a = text.replace(/[?!]/g, '.').split(/[.!?]/g);\r\n        let newText = '';\r\n        for (let i = 0; i < a.length; i++) {\r\n            a[i] = '.' + a[i].trim();\r\n            if (typeof a[i][1] !== 'undefined'){\r\n                a[i] = a[i].replace(/[.]/g, '');\r\n                if (i<a.length-1){\r\n                    a[i] = a[i][0].toUpperCase()+a[i].slice(1).toLowerCase()+'. ';\r\n                    newText += a[i];\r\n                }\r\n                else{\r\n                    a[i] = a[a.length-1][0].toUpperCase()+a[a.length-1].slice(1).toLowerCase();\r\n                    newText += a[i];\r\n                }\r\n            }\r\n        }\r\n        setText(newText);\r\n    }\r\n\r\n    const removeExtraSpaces = ()=>{\r\n        setText(text.replace(/\\s+/g, ' ').trim())\r\n    }\r\n    \r\n    const copy = ()=>{\r\n        navigator.clipboard.writeText(text);\r\n    }\r\n    \r\n    const clearTextArea =()=>{\r\n        setText('');\r\n    }\r\n\r\n    const handleOnChange = (event) =>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    let wordcount = {\r\n        fontSize: '17px'\r\n    }\r\n\r\n    return(\r\n        <div className=\"textgrid\">\r\n            <div className={`textarea textarea-${props.mode}`}>\r\n                <h2>{props.heading}</h2>\r\n                <textarea className={`mytextarea mytextarea-${props.mode}`} value={text} onChange={handleOnChange} id=\"myBox\" rows=\"12\"></textarea>\r\n                <button className={`casebtn casebtn-${props.mode}`} disabled={text.length===0} onClick={upperCase}>Upper Case</button>\r\n                <button className={`casebtn casebtn-${props.mode}`} disabled={text.length===0} onClick={lowerCase}>Lower Case</button>\r\n                <button className={`casebtn casebtn-${props.mode}`} disabled={text.length===0} onClick={sentenceCase}>Sentence Case</button>\r\n                <button className={`casebtn casebtn-${props.mode}`} disabled={text.length===0} onClick={removeExtraSpaces}>Remove Extra Spaces</button>\r\n                <button className={`casebtn casebtn-${props.mode}`} disabled={text.length===0} onClick={copy}>Copy</button>\r\n                <button className={`casebtn casebtn-${props.mode}`} disabled={text.length===0} onClick={clearTextArea}>Clear</button>\r\n            </div>\r\n            <div className={`textarea textarea-${props.mode}`}>\r\n                <p style={wordcount}>Total Words <span>{text.replace(/\\s+/g, ' ').split(' ').filter((e)=>{return e.length!==0}).length}</span> and Letters <span>{text.length}</span></p>\r\n                <p>Minutes to read: <span>{text.replace(/\\s+/g, ' ').split(' ').filter((e)=>{return e.length!==0}).length/250}</span></p>\r\n            </div>\r\n            <div className={`textarea textarea-${props.mode}`}>\r\n                <h3>Preview</h3>\r\n                <p className=\"preview\">{text.length>0?text:'Type Something To get Preview'}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport '../style/Footer.css';\r\n\r\nexport default function footer(props){\r\n    let author = {\r\n        color: 'hotpink',\r\n        fontSize: '17px'\r\n    }\r\n    return(\r\n        <footer className={`footer footer-${props.mode}`}>\r\n            <p><span>&copy;CopyRight 2021-{new Date().getFullYear() +1}</span><br></br>All Rights Reserved.</p>\r\n            <p>Created by <span style={author}>Satya</span></p>\r\n        </footer>\r\n    )\r\n}","import React from \"react\";\nimport { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textarea from './components/Textarea';\nimport Footer from './components/Footer';\n// import About from './components/About';\n\n// for routing\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [modeText, setmodeText] = useState('Dark Mode');\n  const toggleMode = ()=>{\n    if (mode === 'light'){\n       setmode('dark');\n       setmodeText('Light Mode')\n       document.body.style.backgroundColor = '#555';\n      }\n      else{\n        setmode('light');\n        setmodeText('Dark Mode')\n        document.body.style.backgroundColor = 'white';\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar logo=\"TextUtils\" mode={mode} modeText={modeText} toggleMode={toggleMode}/>\n      {/* <Switch>\n        <Route exact path=\"/\"> */}\n          <Textarea heading=\"Enter Your Text Below\" mode={mode}/>\n        {/* </Route>\n        <Route exact path=\"/about\">\n          <About mode={mode}/>\n        </Route>\n      </Switch> */}\n      <Footer mode={mode}/>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <HashRouter> //for github routing and at this time i am not going to routing */}\n      <App />\n    {/* </HashRouter> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}